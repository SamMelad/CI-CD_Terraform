name: CI/CD Pipline

# Making 2 triggers one when push changes in main, and the other manully any time you want 
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  Test_Python_And_Package:
   runs-on: ubuntu-latest

   env:
    Python_v: '3.x'
    require_file: 'requirements.txt'

   steps:
     - name: checkout code
       uses: actions/checkout@v2

     - name: set up Python
       uses: actions/setup-python@v2
       with:
         python-version: ${{ env.Python_v }}

     - name: create virtual environment
       run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.require_file }}
      
     - name: run tests
       run: |
        python -m unittest discover -s my_package/tests -p 'test_*.py'

     - name: lint with python 
       run: |
        pip install pylint
        pylint my_package/main.py

     - name: build package
       run: |
        python setup.py sdist bdist_wheel
        mkdir artifacts
        mv dist/* artifacts

     - name: upload artifacts
       uses: actions/upload-artifact@v2
       with:
         name: my_flask_app
         path: artifacts

  Terraform_Creating_VPC_And_Instance:
    needs: Test_Python_And_Package
    runs-on: ubuntu-latest
    environment: Production

    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v2
       
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
 
      - name: Terraform Apply
        run: |
             terraform apply --auto-approve
      
      - id: ip_address
        run: | 
            terraform-bin output instance_ip |tr "\"" "\0" >ip
            echo ip=$(cat ip) >> "$GITHUB_OUTPUT" 

      - name: Print GITHUB_ENV
        run: echo $GITHUB_ENV

    outputs:
      output1: ${{ steps.ip_address.outputs.ip }}


  Deploy_TO_Created_instance:
      needs: [Test_Python_And_Package, Terraform_Creating_VPC_And_Instance]
      runs-on: ubuntu-latest
      environment: Production

      steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # ssh-keyscan -H ${{ needs.Terraform_Creating_VPC_And_Instance.outputs.ip_address }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 Instance
        run: |
          ssh ec2-user@${{ needs.Terraform_Creating_VPC_And_Instance.outputs.output1 }} "
            sudo yum update -y;
            sudo yum install git python3-pip -y;
            git clone https://github.com/SamMelad/CI-CD_Project.git;
            cd CI-CD_Project;
            pip3 install -r requirements.txt;
            python3 my_package/main.py "
